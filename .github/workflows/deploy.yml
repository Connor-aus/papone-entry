name: Deploy React SPA to AWS S3 + CloudFront

on:
  push:
    branches: [main]
  workflow_dispatch:

env:
  AWS_REGION_DEPLOYMENT: ${{ secrets.AWS_REGION_DEPLOYMENT }}
  S3_BUCKET_NAME: ${{ secrets.S3_BUCKET_NAME }}
  DOMAIN_NAME: ${{ secrets.DOMAIN_NAME }}
  ACM_CERT_ARN: ${{ secrets.ACM_CERT_ARN }}
  AWS_ACCOUNT_ID: ${{ secrets.AWS_ACCOUNT_ID }}

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'
          cache: 'npm'

      - name: Install Dependencies and Build
        run: |
          npm ci
          npm run build

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION_DEPLOYMENT }}

      - name: Sync build/ to S3
        run: aws s3 sync build/ s3://${{ env.S3_BUCKET_NAME }} --delete

      - name: Create or Reuse CloudFront OAC
        id: create-oac
        run: |
          OAC_NAME="cf-oac-${{ env.S3_BUCKET_NAME }}"
          OAC_ID=$(aws cloudfront list-origin-access-controls \
            --query "OriginAccessControlList.Items[?Name=='$OAC_NAME'].Id" \
            --output text)

          if [[ -z "$OAC_ID" || "$OAC_ID" == "None" ]]; then
            echo "Creating new OAC..."
            OAC_ID=$(aws cloudfront create-origin-access-control \
              --origin-access-control-config "{
                \"Name\": \"$OAC_NAME\",
                \"Description\": \"OAC for ${{ env.S3_BUCKET_NAME }}\",
                \"SigningProtocol\": \"sigv4\",
                \"SigningBehavior\": \"always\",
                \"OriginAccessControlOriginType\": \"s3\"
              }" --query "OriginAccessControl.Id" --output text)
          else
            echo "Using existing OAC: $OAC_ID"
          fi

          echo "OAC_ID=$OAC_ID" >> $GITHUB_ENV

      - name: Find Existing CloudFront Distribution
        id: find-distribution
        run: |
          ORIGIN_DOMAIN="${{ env.S3_BUCKET_NAME }}.s3.${{ env.AWS_REGION_DEPLOYMENT }}.amazonaws.com"
          CF_DIST_ID=$(aws cloudfront list-distributions \
            --query "DistributionList.Items[?Origins.Items[0].DomainName=='$ORIGIN_DOMAIN'].Id" \
            --output text)

          if [[ -z "$CF_DIST_ID" || "$CF_DIST_ID" == "None" ]]; then
            echo "‚ùå No CloudFront distribution found for origin domain: $ORIGIN_DOMAIN"
            echo "üõë Please create a CloudFront distribution manually that points to this S3 bucket."
            exit 1
          else
            echo "‚úÖ Using existing CloudFront distribution: $CF_DIST_ID"
            echo "CF_DIST_ID=$CF_DIST_ID" >> $GITHUB_ENV
          fi

      - name: Apply Bucket Policy for CloudFront Access
        run: |
          CF_DIST_ARN="arn:aws:cloudfront::${{ env.AWS_ACCOUNT_ID }}:distribution/$CF_DIST_ID"
          POLICY=$(cat infra/bucket-policy.json | \
            sed "s/__BUCKET_NAME__/${{ env.S3_BUCKET_NAME }}/g" | \
            sed "s#__CLOUDFRONT_DIST_ARN__#$CF_DIST_ARN#g")
          echo "$POLICY" > bucket-policy-applied.json
          aws s3api put-bucket-policy --bucket ${{ env.S3_BUCKET_NAME }} --policy file://bucket-policy-applied.json

      - name: Invalidate CloudFront Cache
        run: |
          echo "Creating CloudFront invalidation..."
          INVALIDATION_ID=$(aws cloudfront create-invalidation \
            --distribution-id $CF_DIST_ID \
            --paths "/*" \
            --query "Invalidation.Id" --output text)

          if [[ -z "$INVALIDATION_ID" || "$INVALIDATION_ID" == "None" ]]; then
            echo "‚ùå CloudFront invalidation failed."
          else
            echo "‚úÖ Invalidation started: $INVALIDATION_ID"
          fi

      - name: Output Deployment Info
        run: |
          echo "‚úÖ Deployment complete!"
          echo "üåê Visit: https://${{ env.DOMAIN_NAME }}"
          echo "CloudFront Distribution ID: $CF_DIST_ID"
